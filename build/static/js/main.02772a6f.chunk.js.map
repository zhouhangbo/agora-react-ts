{"version":3,"sources":["components/videoPanel.tsx","components/options.tsx","pages/home.tsx","store/reducer.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["VideoPanel","AgoraRTC","props","useState","playing","setPlaying","sounding","setSounding","style","padding","id","name","width","height","PauseCircleOutlined","onClick","stream","muteVideo","PlaySquareOutlined","unmuteVideo","AudioOutlined","muteAudio","AudioMutedOutlined","unmuteAudio","Content","Layout","resolutions","value","rtc","client","localStream","remoteStreams","state","cameraIdOptions","microphoneIdOptions","joined","published","uid","formRef","React","layout","labelCol","span","wrapperCol","tailLayout","offset","onFinish","values","console","log","onFinishFailed","errorInfo","handleEvents","_this","on","err","evt","streams","filter","e","getId","peerStream","find","isPlaying","stop","setState","message","success","remoteStream","info","subscribe","push","setTimeout","play","join","a","option","current","getFieldsValue","error","createClient","mode","codec","sync","init","appId","token","channel","createStream","streamID","audio","video","screen","microphoneId","cameraId","publish","notification","description","leave","close","i","length","shift","syncFail","unpublish","func","params","Promise","resolve","reject","result","window","VERSION","checkSystemRequirements","updateOptions","videos","audios","getDevices","devices","item","kind","label","deviceId","minHeight","this","ref","initialValues","remember","Item","rules","required","gutter","type","htmlType","marginLeft","options","initialValue","Group","disabled","display","flexDirection","flexWrap","map","Header","Footer","className","theme","defaultSelectedKeys","margin","textAlign","initialState","articles","title","body","reducer","store","createStore","App","script","document","createElement","async","src","head","appendChild","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.02772a6f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Button } from 'antd';\nimport { AudioOutlined, AudioMutedOutlined, PlaySquareOutlined, PauseCircleOutlined } from '@ant-design/icons';\n\n\nfunction VideoPanel(props) {\n    const [playing, setPlaying] = useState(true);\n    const [sounding, setSounding] = useState(true);\n\n    return (\n        <div style={{padding: '8px'}}>\n        <div key={props.name} id={props.name} style={{width: '480px', height: '320px'}}/>\n        {!playing?<PlaySquareOutlined onClick={() => {props.stream.unmuteVideo();setPlaying(true)}}/>:<PauseCircleOutlined onClick={() => {props.stream.muteVideo();setPlaying(false)}}/>}\n        {!sounding?<AudioMutedOutlined onClick={() => {props.stream.unmuteAudio();setSounding(true)}}/>:<AudioOutlined onClick={() => {props.stream.muteAudio();setSounding(false)}}/>}\n        </div>\n    );\n}\nexport default VideoPanel","import * as React from 'react';\nimport { Layout, Form, Input, InputNumber, Button, Checkbox, Radio, Select, notification, message, Row, Col } from 'antd';\nimport { FormInstance } from 'antd/lib/form';\nimport VideoPanel from './videoPanel';\n\nconst { Content } = Layout;\nvar AgoraRTC;\nconst resolutions = [{\n        name: \"default\",\n        value: \"default\",\n    },\n    {\n        name: \"480p\",\n        value: \"480p\",\n    },\n    {\n        name: \"720p\",\n        value: \"720p\",\n    },\n    {\n        name: \"1080p\",\n        value: \"1080p\"\n    }\n]\nvar rtc = {\n    client: null,\n    localStream: null,\n    remoteStreams: []\n}\ntype Props = {\n\n};\n\nexport default class extends React.Component < Props > {\n\n    state = {\n        cameraIdOptions: [],\n        microphoneIdOptions: [],\n        joined: false,\n        published: false,\n        uid: 0,\n        remoteStreams: []\n    };\n\n    formRef = React.createRef < FormInstance > ();\n\n    layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n    };\n    tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n    };\n    onFinish = values => {\n        console.log('Success:', values);\n    };\n\n    onFinishFailed = errorInfo => {\n        console.log('Failed:', errorInfo);\n    };\n    handleEvents = (_this) => {\n        // Occurs when an error message is reported and requires error handling.\n        rtc.client.on(\"error\", (err) => {\n            console.log(err)\n        })\n        // Occurs when the peer user leaves the channel; for example, the peer user calls Client.leave.\n        rtc.client.on(\"peer-leave\", function(evt) {\n            var id = evt.uid;\n            console.log(\"id\", evt)\n            let streams = rtc.remoteStreams.filter(e => id !== e.getId())\n            let peerStream = rtc.remoteStreams.find(e => id === e.getId())\n            if (peerStream && peerStream.isPlaying()) {\n                peerStream.stop()\n            }\n            rtc.remoteStreams = streams\n            _this.setState({ remoteStreams: rtc.remoteStreams })\n            if (id !== _this.state.uid) {\n                // removeView(id)\n            }\n            message.success(\"peer leave\")\n            console.log(\"peer-leave\", id)\n        })\n        // Occurs when the local stream is published.\n        rtc.client.on(\"stream-published\", function(evt) {\n            message.success(\"stream published success\")\n            console.log(\"stream-published\")\n        })\n        // Occurs when the remote stream is added.\n        rtc.client.on(\"stream-added\", function(evt) {\n            var remoteStream = evt.stream\n            var id = remoteStream.getId()\n            message.info(\"stream-added uid: \" + id)\n            if (id !== _this.state.uid) {\n                rtc.client.subscribe(remoteStream, function(err) {\n                    console.log(\"stream subscribe failed\", err)\n                })\n            }\n            console.log(\"stream-added remote-uid: \", id)\n        })\n        // Occurs when a user subscribes to a remote stream.\n        rtc.client.on(\"stream-subscribed\", function(evt) {\n            var remoteStream = evt.stream\n            var id = remoteStream.getId()\n            rtc.remoteStreams.push(remoteStream)\n            _this.setState({ remoteStreams: rtc.remoteStreams })\n            // addView(id)\n            setTimeout(() => remoteStream.play(\"remote_video_\" + id), 100)\n            message.info(\"stream-subscribed remote-uid: \" + id)\n            console.log(\"stream-subscribed remote-uid: \", id)\n        })\n        // Occurs when the remote stream is removed; for example, a peer user calls Client.unpublish.\n        rtc.client.on(\"stream-removed\", function(evt) {\n            var remoteStream = evt.stream\n            var id = remoteStream.getId()\n            message.info(\"stream-removed uid: \" + id)\n            if (remoteStream.isPlaying()) {\n                remoteStream.stop()\n            }\n            rtc.remoteStreams = rtc.remoteStreams.filter(function(stream) {\n                return stream.getId() !== id\n            })\n            _this.setState({ remoteStreams: rtc.remoteStreams })\n            // removeView(id)\n            console.log(\"stream-removed remote-uid: \", id)\n        })\n        rtc.client.on(\"onTokenPrivilegeWillExpire\", function() {\n            // After requesting a new token\n            // rtc.client.renewToken(token);\n            message.info(\"onTokenPrivilegeWillExpire\")\n            console.log(\"onTokenPrivilegeWillExpire\")\n        })\n        rtc.client.on(\"onTokenPrivilegeDidExpire\", function() {\n            // After requesting a new token\n            // client.renewToken(token);\n            message.info(\"onTokenPrivilegeDidExpire\")\n            console.log(\"onTokenPrivilegeDidExpire\")\n        })\n    }\n    join = async () => {\n        let option = this.formRef.current.getFieldsValue();\n        if (this.state.joined) {\n            message.error(\"Your already joined\");\n            return;\n        }\n\n        rtc.client = AgoraRTC.createClient({ mode: option.mode, codec: option.codec });\n\n        try {\n            //init\n            await this.sync(rtc.client.init, option.appId);\n\n            //join\n            let uid = await this.sync(rtc.client.join, option.token, option.channel, option.uid);\n            this.setState({ uid: uid, joined: true });\n\n            // create local stream\n            rtc.localStream = AgoraRTC.createStream({\n                streamID: uid,\n                audio: true,\n                video: true,\n                screen: false,\n                microphoneId: option.microphoneId,\n                cameraId: option.cameraId\n            })\n\n            // initialize local stream. Callback function executed after intitialization is done\n            await this.sync(rtc.localStream.init);\n            rtc.localStream.play(\"local_stream\")\n\n            // publish local stream\n            this.publish()\n        } catch (e) {\n            notification['error']({\n                message: 'client join failed ',\n                description: e,\n            });\n        }\n\n        //TODO绑定监听事件\n        this.handleEvents(this);\n\n    }\n    leave = async () => {\n        if (!rtc.client) {\n            message.error(\"Please Join First!\")\n            return\n        }\n        if (!this.state.joined) {\n            message.error(\"You are not in channel\")\n            return\n        }\n        /**\n         * Leaves an AgoraRTC Channel\n         * This method enables a user to leave a channel.\n         **/\n        try {\n            let uid = await this.sync(rtc.client.leave);\n            // stop stream\n            if (rtc.localStream.isPlaying()) {\n                rtc.localStream.stop()\n            }\n            // close stream\n            rtc.localStream.close()\n            for (let i = 0; i < rtc.remoteStreams.length; i++) {\n                var stream = rtc.remoteStreams.shift()\n                var id = stream.getId()\n                if (stream.isPlaying()) {\n                    stream.stop()\n                }\n                //TODO\n                // removeView(id)\n            }\n            rtc.localStream = null\n            rtc.remoteStreams = []\n            rtc.client = null\n            console.log(\"client leaves channel success\")\n            this.setState({ joined: false, published: false })\n            message.success(\"leave success\")\n        } catch (e) {\n            notification['error']({\n                message: 'channel leave failed ',\n                description: e,\n            });\n        }\n    }\n    publish = async () => {\n        if (!rtc.client) {\n            message.error(\"Please Join Room First\")\n            return\n        }\n        if (this.state.published) {\n            message.error(\"Your already published\")\n            return\n        }\n\n        try {\n            // publish localStream\n            await this.syncFail(rtc.client.publish, rtc.localStream)\n            message.success(\"publish success\")\n            this.setState({ published: true })\n        } catch (e) {\n            notification['error']({\n                message: 'publish failed ',\n                description: e,\n            });\n        }\n    }\n    unpublish = async () => {\n        if (!rtc.client) {\n            message.error(\"Please Join Room First\")\n            return\n        }\n        if (!this.state.published) {\n            message.error(\"Your didn\b\b\b't publish\")\n            return\n        }\n\n        try {\n            // unpublish localStream\n            await this.syncFail(rtc.client.unpublish, rtc.localStream)\n            message.success(\"unpublish success\")\n            this.setState({ published: false })\n        } catch (e) {\n            notification['error']({\n                message: 'unpublish failed ',\n                description: e,\n            });\n        }\n    }\n\n    sync = (func: Function, ...params) => {\n        return new Promise((resolve, reject) => {\n            func(...params, result => resolve(result), err => reject(err))\n        });\n    }\n\n    syncFail = (func: Function, ...params) => {\n        return new Promise((resolve, reject) => {\n            func(...params, err => reject(err))\n            resolve(1)\n        });\n    }\n\n    componentDidMount() {\n        //sdk加载方式需要优化\n        setTimeout(async () => {\n            AgoraRTC = (window as any).AgoraRTC;\n            console.log(\"agora sdk version: \" + AgoraRTC.VERSION + \" compatible: \" + AgoraRTC.checkSystemRequirements());\n\n            const updateOptions = (videos, audios) => { this.setState({ cameraIdOptions: videos, microphoneIdOptions: audios }) }\n            let devices;\n            try { //获取设备及异常处理\n                devices = await this.sync(AgoraRTC.getDevices)\n            } catch (e) {\n                notification['error']({\n                    message: 'Failed to getDevice',\n                    description: e,\n                });\n            }\n\n            let videos = []\n            let audios = []\n            for (let i = 0; i < (devices as any).length; i++) {\n                let item = devices[i]\n                if (\"videoinput\" == item.kind) {\n                    let name = item.label\n                    let value = item.deviceId\n                    if (!name) {\n                        name = \"camera-\" + videos.length\n                    }\n                    videos.push({\n                        label: name,\n                        value: value,\n                        kind: item.kind\n                    })\n                }\n                if (\"audioinput\" == item.kind) {\n                    let name = item.label\n                    let value = item.deviceId\n                    if (!name) {\n                        name = \"microphone-\" + audios.length\n                    }\n                    audios.push({\n                        label: name,\n                        value: value,\n                        kind: item.kind\n                    })\n                }\n            }\n\n            updateOptions(videos, audios)\n        }, 500)\n    }\n\n    render() {\n        return (\n            <Content style={{minHeight: \"100px\"}}>\n              <Form\n                {...this.layout}\n                ref={this.formRef}\n                name=\"basic\"\n                initialValues={{ remember: true }}\n                onFinish={this.onFinish}\n                onFinishFailed={this.onFinishFailed}\n              >\n                <Form.Item\n                  label=\"appId\"\n                  name=\"appId\"\n                  rules={[{ required: true, message: 'Please input your appID!' }]}\n                >\n                  <Input />\n                </Form.Item>\n\n                <Form.Item\n                  label=\"channel\"\n                  name=\"channel\"\n                  rules={[{ required: true, message: 'Please input your Channel!' }]}\n                >\n                  <Input />\n                </Form.Item>\n\n                <Form.Item\n                  label=\"token\"\n                  name=\"token\"\n                  rules={[{ required: true, message: 'Please input your Token!' }]}\n                >\n                  <Input />\n                </Form.Item>\n\n                <Form.Item {...this.tailLayout}>\n                <Row gutter={16}>\n                  <Button type=\"primary\" htmlType=\"submit\" onClick={this.join} style={{marginLeft: '8px'}}>\n                    JOIN\n                  </Button>\n                  <Button type=\"primary\" htmlType=\"submit\"  onClick={this.leave} style={{marginLeft: '8px'}}>\n                    LEAVE\n                  </Button>\n                  <Button type=\"primary\" htmlType=\"submit\"  onClick={this.publish} style={{marginLeft: '8px'}}>\n                    PUBLISH\n                  </Button>\n                  <Button type=\"primary\" htmlType=\"submit\"  onClick={this.unpublish} style={{marginLeft: '8px'}}>\n                    UNPUBLISH\n                  </Button>\n                  </Row>\n                </Form.Item>\n\n                <Form.Item\n                  label=\"uid\"\n                  name=\"uid\"\n                >\n                  <InputNumber value={this.state.uid}/>\n                </Form.Item>\n                <Form.Item\n                  label=\"cameraId\"\n                  name=\"cameraId\"\n                >\n                  <Select options={this.state.cameraIdOptions}/>\n                </Form.Item>\n                <Form.Item\n                  label=\"microphoneId\"\n                  name=\"microphoneId\"\n                >\n                  <Select options={this.state.microphoneIdOptions}/>\n                </Form.Item>\n                <Form.Item\n                  label=\"cameraResolution\"\n                  name=\"cameraResolution\"\n                  initialValue={resolutions[0].value}\n                >\n                  <Select options = {resolutions}/>\n                </Form.Item>\n                <Form.Item\n                  label=\"mode\"\n                  name=\"mode\"\n                  initialValue=\"rtc\"\n                >\n                  <Radio.Group>\n                    <Radio value=\"rtc\">rtc</Radio>\n                    <Radio value=\"live\" disabled>live</Radio>\n                  </Radio.Group>\n                </Form.Item>\n                <Form.Item\n                  label=\"codec\"\n                  name=\"codec\"\n                  initialValue=\"h264\"\n                >\n                  <Radio.Group>\n                    <Radio value=\"h264\">h264</Radio>\n                    <Radio value=\"vp8\">vp8</Radio>\n                  </Radio.Group>\n                </Form.Item>\n              </Form>\n              <div style={{display: 'flex', flexDirection: 'row', flexWrap: 'wrap' }}>\n              {this.state.joined && <VideoPanel stream={rtc.localStream} name=\"local_stream\" />}\n              {this.state.remoteStreams.map((item) => {\n                return <VideoPanel stream={item} name={\"remote_video_\" + item.getId()} />\n              })}\n              </div>\n            </Content>\n        );\n    }\n}","import * as React from 'react';\nimport Options from '../components/options';\nimport { Layout, Menu, Breadcrumb } from 'antd';\n\nconst { Header, Content, Footer } = Layout;\n\nexport default () => {\n    return (\n        <Layout className=\"layout\">\n          <Header>\n            <div className=\"logo\" />\n            <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['1']}>\n              <Menu.Item key=\"1\">视频通话</Menu.Item>\n            </Menu>\n          </Header>\n          <Content style={{ padding: '0 50px' }}>\n            <Breadcrumb style={{ margin: '16px 0' }}>\n              <Breadcrumb.Item>Demo</Breadcrumb.Item>\n            </Breadcrumb>\n            <div className=\"site-layout-content\"><Options /></div>\n          </Content>\n          <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\n        </Layout>\n    );\n};","const initialState = {\n  articles: [\n    { id: 1, title: \"post 1\", body: \"Quisque cursus, metus vitae pharetra\" },\n    { id: 2, title: \"post 2\", body: \"Quisque cursus, metus vitae pharetra\" },\n  ],\n}\n\nconst reducer = (state = initialState, action) => {\n  return state\n}\nexport default reducer","import React, { Component } from 'react';\nimport './App.css';\nimport Home from './pages/home';\nimport { createStore } from \"redux\";\nimport reducer from \"./store/reducer\";\nimport { Provider } from \"react-redux\"\n\nconst store = createStore(reducer)\n\nclass App extends Component {\n    render() {\n        var script = document.createElement('script');\n        script.type = 'text/javascript';\n        script.async = true;\n        script.src = 'https://oss.dev.jiandanchina.com/common/AgoraRTCSDK.js';\n        document.head.appendChild(script);\n        return (\n          <Provider store={store}>\n            <Home />\n          </Provider>\n        );\n    }\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}